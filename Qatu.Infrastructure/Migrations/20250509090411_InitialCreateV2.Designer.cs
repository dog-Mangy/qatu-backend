// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Qatu.Infrastructure.Persistence;

#nullable disable

namespace Qatu.Infrastructure.Migrations
{
    [DbContext(typeof(QatuDbContext))]
    [Migration("20250509090411_InitialCreateV2")]
    partial class InitialCreateV2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Qatu.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<Guid>("StoreId")
                        .HasColumnType("char(36)")
                        .HasColumnName("store_id");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d9112846-d97d-4395-8e37-f855759aa650"),
                            Category = "Electronics",
                            CreatedAt = new DateTime(2025, 5, 9, 9, 4, 10, 850, DateTimeKind.Utc).AddTicks(3927),
                            Description = "Latest model smartphone",
                            Name = "Smartphone",
                            Price = 699.99m,
                            Rating = 4.5m,
                            Stock = 50,
                            StoreId = new Guid("44444444-4444-4444-4444-444444444444")
                        },
                        new
                        {
                            Id = new Guid("6883ab22-dca9-4f24-b96a-7a926f0a8cf5"),
                            Category = "Electronics",
                            CreatedAt = new DateTime(2025, 5, 9, 9, 4, 10, 850, DateTimeKind.Utc).AddTicks(3936),
                            Description = "High-performance laptop",
                            Name = "Laptop",
                            Price = 1299.99m,
                            Rating = 4.8m,
                            Stock = 20,
                            StoreId = new Guid("44444444-4444-4444-4444-444444444444")
                        },
                        new
                        {
                            Id = new Guid("0a262832-a2ca-4540-ae62-4ee9f458c8e9"),
                            Category = "Electronics",
                            CreatedAt = new DateTime(2025, 5, 9, 9, 4, 10, 850, DateTimeKind.Utc).AddTicks(3941),
                            Description = "Lightweight and portable",
                            Name = "Tablet",
                            Price = 499.99m,
                            Rating = 4.3m,
                            Stock = 30,
                            StoreId = new Guid("44444444-4444-4444-4444-444444444444")
                        },
                        new
                        {
                            Id = new Guid("daa9f12e-1db2-4a53-a159-3f520bb6eafb"),
                            Category = "Wearables",
                            CreatedAt = new DateTime(2025, 5, 9, 9, 4, 10, 850, DateTimeKind.Utc).AddTicks(3944),
                            Description = "Fitness tracker",
                            Name = "Smartwatch",
                            Price = 199.99m,
                            Rating = 4.1m,
                            Stock = 40,
                            StoreId = new Guid("44444444-4444-4444-4444-444444444444")
                        },
                        new
                        {
                            Id = new Guid("e09bb8f2-834f-4572-a3d4-596d66930f62"),
                            Category = "Accessories",
                            CreatedAt = new DateTime(2025, 5, 9, 9, 4, 10, 850, DateTimeKind.Utc).AddTicks(3946),
                            Description = "Noise-canceling headphones",
                            Name = "Headphones",
                            Price = 149.99m,
                            Rating = 4.4m,
                            Stock = 25,
                            StoreId = new Guid("44444444-4444-4444-4444-444444444444")
                        },
                        new
                        {
                            Id = new Guid("eb8183f3-3193-43f4-a5a6-6ee4b7dd9588"),
                            Category = "Clothing",
                            CreatedAt = new DateTime(2025, 5, 9, 9, 4, 10, 850, DateTimeKind.Utc).AddTicks(3949),
                            Description = "Blue denim jeans",
                            Name = "Jeans",
                            Price = 49.99m,
                            Rating = 4.2m,
                            Stock = 100,
                            StoreId = new Guid("55555555-5555-5555-5555-555555555555")
                        },
                        new
                        {
                            Id = new Guid("eb560c7a-2d62-443d-97b5-117ae42c73f0"),
                            Category = "Clothing",
                            CreatedAt = new DateTime(2025, 5, 9, 9, 4, 10, 850, DateTimeKind.Utc).AddTicks(3953),
                            Description = "100% Cotton T-shirt",
                            Name = "T-Shirt",
                            Price = 19.99m,
                            Rating = 4.0m,
                            Stock = 150,
                            StoreId = new Guid("55555555-5555-5555-5555-555555555555")
                        },
                        new
                        {
                            Id = new Guid("7feb748a-1e09-4f40-a0a9-cbcd9d69bc65"),
                            Category = "Clothing",
                            CreatedAt = new DateTime(2025, 5, 9, 9, 4, 10, 850, DateTimeKind.Utc).AddTicks(3956),
                            Description = "Waterproof winter jacket",
                            Name = "Jacket",
                            Price = 99.99m,
                            Rating = 4.3m,
                            Stock = 60,
                            StoreId = new Guid("55555555-5555-5555-5555-555555555555")
                        },
                        new
                        {
                            Id = new Guid("1ba43fc4-44ea-40d6-83b6-df9bdec60137"),
                            Category = "Footwear",
                            CreatedAt = new DateTime(2025, 5, 9, 9, 4, 10, 850, DateTimeKind.Utc).AddTicks(3958),
                            Description = "Comfortable sneakers",
                            Name = "Sneakers",
                            Price = 59.99m,
                            Rating = 4.2m,
                            Stock = 120,
                            StoreId = new Guid("55555555-5555-5555-5555-555555555555")
                        },
                        new
                        {
                            Id = new Guid("46af3683-63e8-4834-8af4-0d95d118dbff"),
                            Category = "Furniture",
                            CreatedAt = new DateTime(2025, 5, 9, 9, 4, 10, 850, DateTimeKind.Utc).AddTicks(3961),
                            Description = "Modern 3-seater sofa",
                            Name = "Sofa",
                            Price = 899.99m,
                            Rating = 4.6m,
                            Stock = 10,
                            StoreId = new Guid("66666666-6666-6666-6666-666666666666")
                        },
                        new
                        {
                            Id = new Guid("dafd71a8-2a0c-4816-bfad-dc08a0acba16"),
                            Category = "Furniture",
                            CreatedAt = new DateTime(2025, 5, 9, 9, 4, 10, 850, DateTimeKind.Utc).AddTicks(3965),
                            Description = "Solid wood dining table",
                            Name = "Dining Table",
                            Price = 499.99m,
                            Rating = 4.5m,
                            Stock = 15,
                            StoreId = new Guid("66666666-6666-6666-6666-666666666666")
                        },
                        new
                        {
                            Id = new Guid("7a596c9e-2ae1-4d62-9d44-aecebcf36c80"),
                            Category = "Furniture",
                            CreatedAt = new DateTime(2025, 5, 9, 9, 4, 10, 850, DateTimeKind.Utc).AddTicks(3968),
                            Description = "Queen size bed frame",
                            Name = "Bed Frame",
                            Price = 299.99m,
                            Rating = 4.7m,
                            Stock = 5,
                            StoreId = new Guid("66666666-6666-6666-6666-666666666666")
                        },
                        new
                        {
                            Id = new Guid("7ff0c73f-d54a-451f-ab91-5ef88b6d931a"),
                            Category = "Home Decor",
                            CreatedAt = new DateTime(2025, 5, 9, 9, 4, 10, 850, DateTimeKind.Utc).AddTicks(3970),
                            Description = "LED floor lamp",
                            Name = "Lamp",
                            Price = 49.99m,
                            Rating = 4.2m,
                            Stock = 30,
                            StoreId = new Guid("66666666-6666-6666-6666-666666666666")
                        },
                        new
                        {
                            Id = new Guid("7066cd87-5f16-4def-ab73-a08db351afda"),
                            Category = "Home Decor",
                            CreatedAt = new DateTime(2025, 5, 9, 9, 4, 10, 850, DateTimeKind.Utc).AddTicks(3973),
                            Description = "Soft area rug",
                            Name = "Carpet",
                            Price = 99.99m,
                            Rating = 4.3m,
                            Stock = 20,
                            StoreId = new Guid("66666666-6666-6666-6666-666666666666")
                        });
                });

            modelBuilder.Entity("Qatu.Domain.Entities.Store", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            Id = new Guid("44444444-4444-4444-4444-444444444444"),
                            CreatedAt = new DateTime(2025, 5, 9, 9, 4, 10, 850, DateTimeKind.Utc).AddTicks(3898),
                            Description = "Electronics and gadgets",
                            Name = "Tech Store",
                            UserId = new Guid("22222222-2222-2222-2222-222222222222")
                        },
                        new
                        {
                            Id = new Guid("55555555-5555-5555-5555-555555555555"),
                            CreatedAt = new DateTime(2025, 5, 9, 9, 4, 10, 850, DateTimeKind.Utc).AddTicks(3900),
                            Description = "Clothing and accessories",
                            Name = "Fashion Store",
                            UserId = new Guid("22222222-2222-2222-2222-222222222222")
                        },
                        new
                        {
                            Id = new Guid("66666666-6666-6666-6666-666666666666"),
                            CreatedAt = new DateTime(2025, 5, 9, 9, 4, 10, 850, DateTimeKind.Utc).AddTicks(3902),
                            Description = "Home essentials and furniture",
                            Name = "Home Store",
                            UserId = new Guid("22222222-2222-2222-2222-222222222222")
                        });
                });

            modelBuilder.Entity("Qatu.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            CreatedAt = new DateTime(2025, 5, 9, 9, 4, 10, 850, DateTimeKind.Utc).AddTicks(3756),
                            Email = "admin@qatu.com",
                            Name = "Admin User",
                            Password = "password123",
                            Role = 0
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            CreatedAt = new DateTime(2025, 5, 9, 9, 4, 10, 850, DateTimeKind.Utc).AddTicks(3758),
                            Email = "seller@qatu.com",
                            Name = "Seller User",
                            Password = "password123",
                            Role = 2
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            CreatedAt = new DateTime(2025, 5, 9, 9, 4, 10, 850, DateTimeKind.Utc).AddTicks(3777),
                            Email = "buyer@qatu.com",
                            Name = "Buyer User",
                            Password = "password123",
                            Role = 1
                        });
                });

            modelBuilder.Entity("Qatu.Domain.Entities.Product", b =>
                {
                    b.HasOne("Qatu.Domain.Entities.Store", "Store")
                        .WithMany("Products")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Store");
                });

            modelBuilder.Entity("Qatu.Domain.Entities.Store", b =>
                {
                    b.HasOne("Qatu.Domain.Entities.User", "User")
                        .WithMany("Stores")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Qatu.Domain.Entities.Store", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Qatu.Domain.Entities.User", b =>
                {
                    b.Navigation("Stores");
                });
#pragma warning restore 612, 618
        }
    }
}
