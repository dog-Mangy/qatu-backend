// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Qatu.Infrastructure.Persistence;

#nullable disable

namespace Qatu.Infrastructure.Migrations
{
    [DbContext(typeof(QatuDbContext))]
    [Migration("20250516201822_InitialCreatev3")]
    partial class InitialCreatev3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Qatu.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            CreatedAt = new DateTime(2025, 5, 16, 20, 18, 21, 837, DateTimeKind.Utc).AddTicks(92),
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            CreatedAt = new DateTime(2025, 5, 16, 20, 18, 21, 837, DateTimeKind.Utc).AddTicks(96),
                            Name = "Clothing"
                        },
                        new
                        {
                            Id = new Guid("cccccccc-cccc-cccc-cccc-cccccccccccc"),
                            CreatedAt = new DateTime(2025, 5, 16, 20, 18, 21, 837, DateTimeKind.Utc).AddTicks(99),
                            Name = "Furniture"
                        },
                        new
                        {
                            Id = new Guid("dddddddd-dddd-dddd-dddd-dddddddddddd"),
                            CreatedAt = new DateTime(2025, 5, 16, 20, 18, 21, 837, DateTimeKind.Utc).AddTicks(112),
                            Name = "Home Decor"
                        });
                });

            modelBuilder.Entity("Qatu.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<Guid>("StoreId")
                        .HasColumnType("char(36)")
                        .HasColumnName("store_id");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("StoreId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5f17ddda-483c-4b81-9dee-6de3b9342747"),
                            CategoryId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            CreatedAt = new DateTime(2025, 5, 16, 20, 18, 21, 837, DateTimeKind.Utc).AddTicks(195),
                            Description = "Latest model smartphone",
                            Name = "Smartphone",
                            Price = 699.99m,
                            Rating = 4.5m,
                            Stock = 50,
                            StoreId = new Guid("44444444-4444-4444-4444-444444444444")
                        },
                        new
                        {
                            Id = new Guid("b4e7388f-f74f-47e1-bb42-4f7c4759766d"),
                            CategoryId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            CreatedAt = new DateTime(2025, 5, 16, 20, 18, 21, 837, DateTimeKind.Utc).AddTicks(203),
                            Description = "High-performance laptop",
                            Name = "Laptop",
                            Price = 1299.99m,
                            Rating = 4.8m,
                            Stock = 20,
                            StoreId = new Guid("44444444-4444-4444-4444-444444444444")
                        },
                        new
                        {
                            Id = new Guid("3ff0c395-1892-4eb3-a573-0661ffb37ad6"),
                            CategoryId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            CreatedAt = new DateTime(2025, 5, 16, 20, 18, 21, 837, DateTimeKind.Utc).AddTicks(209),
                            Description = "Lightweight and portable",
                            Name = "Tablet",
                            Price = 499.99m,
                            Rating = 4.3m,
                            Stock = 30,
                            StoreId = new Guid("44444444-4444-4444-4444-444444444444")
                        },
                        new
                        {
                            Id = new Guid("f14bc0be-de1a-4a27-ad13-f53a7f96180a"),
                            CategoryId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            CreatedAt = new DateTime(2025, 5, 16, 20, 18, 21, 837, DateTimeKind.Utc).AddTicks(221),
                            Description = "Fitness tracker",
                            Name = "Smartwatch",
                            Price = 199.99m,
                            Rating = 4.1m,
                            Stock = 40,
                            StoreId = new Guid("44444444-4444-4444-4444-444444444444")
                        },
                        new
                        {
                            Id = new Guid("23135ee0-0217-40b1-abb7-e19c75746ecc"),
                            CategoryId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            CreatedAt = new DateTime(2025, 5, 16, 20, 18, 21, 837, DateTimeKind.Utc).AddTicks(228),
                            Description = "Noise-canceling headphones",
                            Name = "Headphones",
                            Price = 149.99m,
                            Rating = 4.4m,
                            Stock = 25,
                            StoreId = new Guid("44444444-4444-4444-4444-444444444444")
                        },
                        new
                        {
                            Id = new Guid("15be7ced-dd02-422f-ba45-5385c3ed8f09"),
                            CategoryId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            CreatedAt = new DateTime(2025, 5, 16, 20, 18, 21, 837, DateTimeKind.Utc).AddTicks(235),
                            Description = "Blue denim jeans",
                            Name = "Jeans",
                            Price = 49.99m,
                            Rating = 4.2m,
                            Stock = 100,
                            StoreId = new Guid("55555555-5555-5555-5555-555555555555")
                        },
                        new
                        {
                            Id = new Guid("f67e90be-a7b8-4b34-aefa-e597d3f5acb5"),
                            CategoryId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            CreatedAt = new DateTime(2025, 5, 16, 20, 18, 21, 837, DateTimeKind.Utc).AddTicks(240),
                            Description = "100% Cotton T-shirt",
                            Name = "T-Shirt",
                            Price = 19.99m,
                            Rating = 4.0m,
                            Stock = 150,
                            StoreId = new Guid("55555555-5555-5555-5555-555555555555")
                        },
                        new
                        {
                            Id = new Guid("bfc2820e-6217-4853-8ac7-f4b436e8a833"),
                            CategoryId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            CreatedAt = new DateTime(2025, 5, 16, 20, 18, 21, 837, DateTimeKind.Utc).AddTicks(251),
                            Description = "Waterproof winter jacket",
                            Name = "Jacket",
                            Price = 99.99m,
                            Rating = 4.3m,
                            Stock = 60,
                            StoreId = new Guid("55555555-5555-5555-5555-555555555555")
                        },
                        new
                        {
                            Id = new Guid("105a1d77-03ed-4ef9-8312-bf89136721ad"),
                            CategoryId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            CreatedAt = new DateTime(2025, 5, 16, 20, 18, 21, 837, DateTimeKind.Utc).AddTicks(257),
                            Description = "Comfortable sneakers",
                            Name = "Sneakers",
                            Price = 59.99m,
                            Rating = 4.2m,
                            Stock = 120,
                            StoreId = new Guid("55555555-5555-5555-5555-555555555555")
                        },
                        new
                        {
                            Id = new Guid("2563b643-5835-48d8-b4f9-ca588b4fb8d5"),
                            CategoryId = new Guid("cccccccc-cccc-cccc-cccc-cccccccccccc"),
                            CreatedAt = new DateTime(2025, 5, 16, 20, 18, 21, 837, DateTimeKind.Utc).AddTicks(263),
                            Description = "Modern 3-seater sofa",
                            Name = "Sofa",
                            Price = 899.99m,
                            Rating = 4.6m,
                            Stock = 10,
                            StoreId = new Guid("66666666-6666-6666-6666-666666666666")
                        },
                        new
                        {
                            Id = new Guid("14fb7bdd-1f50-40db-b4b9-266446ac424f"),
                            CategoryId = new Guid("cccccccc-cccc-cccc-cccc-cccccccccccc"),
                            CreatedAt = new DateTime(2025, 5, 16, 20, 18, 21, 837, DateTimeKind.Utc).AddTicks(273),
                            Description = "Solid wood dining table",
                            Name = "Dining Table",
                            Price = 499.99m,
                            Rating = 4.5m,
                            Stock = 15,
                            StoreId = new Guid("66666666-6666-6666-6666-666666666666")
                        },
                        new
                        {
                            Id = new Guid("69b30357-5134-4627-8f41-9c35e0ca4d53"),
                            CategoryId = new Guid("cccccccc-cccc-cccc-cccc-cccccccccccc"),
                            CreatedAt = new DateTime(2025, 5, 16, 20, 18, 21, 837, DateTimeKind.Utc).AddTicks(292),
                            Description = "Queen size bed frame",
                            Name = "Bed Frame",
                            Price = 299.99m,
                            Rating = 4.7m,
                            Stock = 5,
                            StoreId = new Guid("66666666-6666-6666-6666-666666666666")
                        },
                        new
                        {
                            Id = new Guid("2ebe7491-a964-4c0a-a556-7e9dfd886f0a"),
                            CategoryId = new Guid("cccccccc-cccc-cccc-cccc-cccccccccccc"),
                            CreatedAt = new DateTime(2025, 5, 16, 20, 18, 21, 837, DateTimeKind.Utc).AddTicks(303),
                            Description = "LED floor lamp",
                            Name = "Lamp",
                            Price = 49.99m,
                            Rating = 4.2m,
                            Stock = 30,
                            StoreId = new Guid("66666666-6666-6666-6666-666666666666")
                        },
                        new
                        {
                            Id = new Guid("7afe8ce7-63cf-40db-8e0d-3c0a9eabe610"),
                            CategoryId = new Guid("cccccccc-cccc-cccc-cccc-cccccccccccc"),
                            CreatedAt = new DateTime(2025, 5, 16, 20, 18, 21, 837, DateTimeKind.Utc).AddTicks(314),
                            Description = "Soft area rug",
                            Name = "Carpet",
                            Price = 99.99m,
                            Rating = 4.3m,
                            Stock = 20,
                            StoreId = new Guid("66666666-6666-6666-6666-666666666666")
                        });
                });

            modelBuilder.Entity("Qatu.Domain.Entities.Store", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            Id = new Guid("44444444-4444-4444-4444-444444444444"),
                            CreatedAt = new DateTime(2025, 5, 16, 20, 18, 21, 836, DateTimeKind.Utc).AddTicks(9960),
                            Description = "Electronics and gadgets",
                            Name = "Tech Store",
                            UserId = new Guid("22222222-2222-2222-2222-222222222222")
                        },
                        new
                        {
                            Id = new Guid("55555555-5555-5555-5555-555555555555"),
                            CreatedAt = new DateTime(2025, 5, 16, 20, 18, 21, 836, DateTimeKind.Utc).AddTicks(9970),
                            Description = "Clothing and accessories",
                            Name = "Fashion Store",
                            UserId = new Guid("22222222-2222-2222-2222-222222222222")
                        },
                        new
                        {
                            Id = new Guid("66666666-6666-6666-6666-666666666666"),
                            CreatedAt = new DateTime(2025, 5, 16, 20, 18, 21, 836, DateTimeKind.Utc).AddTicks(9977),
                            Description = "Home essentials and furniture",
                            Name = "Home Store",
                            UserId = new Guid("22222222-2222-2222-2222-222222222222")
                        });
                });

            modelBuilder.Entity("Qatu.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            CreatedAt = new DateTime(2025, 5, 16, 20, 18, 21, 836, DateTimeKind.Utc).AddTicks(9280),
                            Email = "admin@qatu.com",
                            Name = "Admin User",
                            Password = "password123",
                            Role = 0
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            CreatedAt = new DateTime(2025, 5, 16, 20, 18, 21, 836, DateTimeKind.Utc).AddTicks(9329),
                            Email = "seller@qatu.com",
                            Name = "Seller User",
                            Password = "password123",
                            Role = 2
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            CreatedAt = new DateTime(2025, 5, 16, 20, 18, 21, 836, DateTimeKind.Utc).AddTicks(9334),
                            Email = "buyer@qatu.com",
                            Name = "Buyer User",
                            Password = "password123",
                            Role = 1
                        });
                });

            modelBuilder.Entity("Qatu.Domain.Entities.Category", b =>
                {
                    b.HasOne("Qatu.Domain.Entities.Category", null)
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("Qatu.Domain.Entities.Product", b =>
                {
                    b.HasOne("Qatu.Domain.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Qatu.Domain.Entities.Store", "Store")
                        .WithMany("Products")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("Qatu.Domain.Entities.Store", b =>
                {
                    b.HasOne("Qatu.Domain.Entities.User", "User")
                        .WithMany("Stores")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Qatu.Domain.Entities.Category", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("Qatu.Domain.Entities.Store", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Qatu.Domain.Entities.User", b =>
                {
                    b.Navigation("Stores");
                });
#pragma warning restore 612, 618
        }
    }
}
