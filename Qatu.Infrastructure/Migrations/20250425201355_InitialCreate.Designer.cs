// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Qatu.Infrastructure.Persistence;

#nullable disable

namespace Qatu.Infrastructure.Migrations
{
    [DbContext(typeof(QatuDbContext))]
    [Migration("20250425201355_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Qatu.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<int>("StoreId")
                        .HasColumnType("int")
                        .HasColumnName("store_id");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Electronics",
                            CreatedAt = new DateTime(2025, 4, 25, 20, 13, 54, 931, DateTimeKind.Utc).AddTicks(5049),
                            Description = "Latest model smartphone",
                            Name = "Smartphone",
                            Price = 699.99m,
                            Rating = 4.5m,
                            Stock = 50,
                            StoreId = 1
                        },
                        new
                        {
                            Id = 2,
                            Category = "Electronics",
                            CreatedAt = new DateTime(2025, 4, 25, 20, 13, 54, 931, DateTimeKind.Utc).AddTicks(5051),
                            Description = "High-performance laptop",
                            Name = "Laptop",
                            Price = 1299.99m,
                            Rating = 4.8m,
                            Stock = 20,
                            StoreId = 1
                        },
                        new
                        {
                            Id = 3,
                            Category = "Clothing",
                            CreatedAt = new DateTime(2025, 4, 25, 20, 13, 54, 931, DateTimeKind.Utc).AddTicks(5053),
                            Description = "Blue denim jeans",
                            Name = "Jeans",
                            Price = 49.99m,
                            Rating = 4.2m,
                            Stock = 100,
                            StoreId = 2
                        });
                });

            modelBuilder.Entity("Qatu.Domain.Entities.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 4, 25, 20, 13, 54, 931, DateTimeKind.Utc).AddTicks(5024),
                            Description = "Electronics and gadgets",
                            Name = "Tech Store",
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 4, 25, 20, 13, 54, 931, DateTimeKind.Utc).AddTicks(5026),
                            Description = "Clothing and accessories",
                            Name = "Fashion Store",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Qatu.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 4, 25, 20, 13, 54, 931, DateTimeKind.Utc).AddTicks(4934),
                            Email = "admin@qatu.com",
                            Name = "Admin User",
                            Password = "password123",
                            Role = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 4, 25, 20, 13, 54, 931, DateTimeKind.Utc).AddTicks(4936),
                            Email = "seller@qatu.com",
                            Name = "Seller User",
                            Password = "password123",
                            Role = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 4, 25, 20, 13, 54, 931, DateTimeKind.Utc).AddTicks(4937),
                            Email = "buyer@qatu.com",
                            Name = "Buyer User",
                            Password = "password123",
                            Role = 1
                        });
                });

            modelBuilder.Entity("Qatu.Domain.Entities.Product", b =>
                {
                    b.HasOne("Qatu.Domain.Entities.Store", "Store")
                        .WithMany("Products")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Store");
                });

            modelBuilder.Entity("Qatu.Domain.Entities.Store", b =>
                {
                    b.HasOne("Qatu.Domain.Entities.User", "User")
                        .WithMany("Stores")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Qatu.Domain.Entities.Store", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Qatu.Domain.Entities.User", b =>
                {
                    b.Navigation("Stores");
                });
#pragma warning restore 612, 618
        }
    }
}
