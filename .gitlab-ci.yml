stages:
  - compile
  - build
  - unit_tests
  - coverage
  - build_container
  - push_container

variables:
  MAJOR_VERSION: "2"
  MINOR_VERSION: "3"
  PATCH_VERSION: "1"
  VERSION_TAG: "DEV-$MAJOR_VERSION.$MINOR_VERSION.$PATCH_VERSION"

compile:
  stage: compile
  image: mcr.microsoft.com/dotnet/sdk:9.0
  script:
    - dotnet restore
    - dotnet build --configuration Release --no-restore
  artifacts:
    paths:
      - "**/bin/"
      - "**/obj/"
    expire_in: 1 hour

build:
  stage: build
  image: mcr.microsoft.com/dotnet/sdk:9.0
  dependencies:
    - compile
  script:
    - dotnet publish Qatu.API/Qatu.API.csproj --configuration Release --output ./publish
  artifacts:
    paths:
      - publish/

unit_tests:
  stage: unit_tests
  image: mcr.microsoft.com/dotnet/sdk:9.0
  script:
    - dotnet test Qatu.Tests.Unit/Qatu.Tests.Unit.csproj --logger "trx;LogFileName=testresults.trx"
  artifacts:
    when: always
    reports:
      junit:
        - "**/*testresults.trx"

coverage:
  stage: coverage
  image: mcr.microsoft.com/dotnet/sdk:9.0
  script:
    - dotnet tool install --global dotnet-reportgenerator-globaltool
    - dotnet test Qatu.Tests.Unit/Qatu.Tests.Unit.csproj --collect:"XPlat Code Coverage" --settings coverlet.runsettings --no-build
    - reportgenerator -reports:"**/coverage.cobertura.xml" -targetdir:"coveragereport" -reporttypes:Html
  artifacts:
    paths:
      - coveragereport/
    expire_in: 1 week

build_container:
  stage: build_container
  image: docker:24.0.7
  services:
    - docker:24.0.7-dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:$VERSION_TAG .
    - docker tag $CI_REGISTRY_IMAGE:$VERSION_TAG $CI_REGISTRY_IMAGE:latest
  dependencies:
    - build

push_container:
  stage: push_container
  image: docker:24.0.7
  services:
    - docker:24.0.7-dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE:$VERSION_TAG
    - docker push $CI_REGISTRY_IMAGE:latest
  dependencies:
    - build_container